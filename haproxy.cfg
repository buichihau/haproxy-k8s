#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2
    ulimit-n    65536
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 10240

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
#frontend  main *:5000
#    acl url_static       path_beg       -i /static /images /javascript /stylesheets
#    acl url_static       path_end       -i .jpg .gif .png .css .js
#
#    use_backend static          if url_static
#    default_backend             app

#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
#backend static
#    balance     roundrobin
#    server      static 127.0.0.1:4331 check

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
#backend app
#    balance     roundrobin
#    server  app1 127.0.0.1:5001 check
#    server  app2 127.0.0.1:5002 check
#    server  app3 127.0.0.1:5003 check
#    server  app4 127.0.0.1:5004 check


#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
listen stats
    mode http
    bind *:7000
    stats enable
    stats uri /
    stats auth admin:oEz1EGCq1pkWnLOm

listen redis
        bind *:7778
        mode tcp
        option tcp-check
        tcp-check send AUTH\ EwkSW2PlArlK7Omj\r\n
        tcp-check send PING\r\n
        tcp-check expect string +PONG
        tcp-check send info\ replication\r\n
        tcp-check expect string role:master
        tcp-check send QUIT\r\n
        tcp-check expect string +OK
        server R1 172.144.101.75:6379 check inter 1s
        server R2 172.144.101.76:6379 check inter 1s
        server R3 172.144.101.77:6379 check inter 1s
        
listen rabbitmq
    bind    *:5673
    mode    tcp
    option  tcplog
    balance roundrobin
    server  rabbitmq-node-1 172.144.101.75:5672 check inter 5000 rise 3 fall 5
    server  rabbitmq-node-2 172.144.101.76:5672 check inter 5000 rise 3 fall 5
    server  rabbitmq-node-3 172.144.101.77:5672 check inter 5000 rise 3 fall 5
    
frontend elastic
    bind :9201
    mode http
    default_backend elastic

backend elastic
    mode http
    option forwardfor
    balance roundrobin
    option httpclose
    server es1 172.144.101.78:9200 weight 1 check inter 1000 rise 5 fall 1
    server es2 172.144.101.79:9200 weight 1 check inter 1000 rise 5 fall 1
    server es3 172.144.101.80:9200 weight 1 check inter 1000 rise 5 fall 1
    
frontend kafka
    bind :9093
    mode tcp
    default_backend kafka

backend kafka
    mode tcp
    option forwardfor
    balance roundrobin
    option httpclose
    server kafka1 172.144.101.75:9092 weight 1 check inter 1000 rise 5 fall 1
    server kafka2 172.144.101.76:9092 weight 1 check inter 1000 rise 5 fall 1
    server kafka3 172.144.101.77:9092 weight 1 check inter 1000 rise 5 fall 1
